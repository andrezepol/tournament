openapi: 3.0.1
info:
  title: userManagerAPI
  description: API para la gestión de usuarios.
  version: 1.0.0
components:
  securitySchemes:
    AWS_IAM:
      type: awsIam
paths:
  /usersManager/createUser:
    post:
      summary: Crea un nuevo usuario.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - nombre
                - correo
                - contrasena
                - fecha_registro
                - num_torneos_creados
                - flag
              properties:
                id:
                  type: string
                  description: Identificador único del usuario.
                nombre:
                  type: string
                  description: Nombre del usuario.
                correo:
                  type: string
                  format: email
                  description: Correo electrónico del usuario.
                contrasena:
                  type: string
                  format: password
                  description: Contraseña del usuario.
                fecha_registro:
                  type: string
                  format: date-time
                  description: Fecha de registro del usuario.
                num_torneos_creados:
                  type: integer
                  description: Número de torneos creados por el usuario.
                flag:
                  type: boolean
                  description: Indicador booleano asociado al usuario.
      responses:
        '201':
          description: Usuario creado exitosamente.
        '400':
          description: Solicitud incorrecta.
        '500':
          description: Error interno del servidor.

  /usersManager/deleteUser:
    delete:
      summary: Elimina un usuario.
      operationId: deleteUser
      security:
        - AWS_IAM: []  # Aquí especificas que este endpoint requiere AWS_IAM
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: Identificador único del usuario a eliminar.
      responses:
        '200':
          description: Usuario eliminado exitosamente.
        '403':
          description: Acceso denegado. Solo los administradores pueden eliminar usuarios.
        '404':
          description: Usuario no encontrado.
        '500':
          description: Error interno del servidor.

  /usersManager/getAllUsers:
    get:
      summary: Obtiene todos los usuarios.
      operationId: getAllUsers
      security:
        - AWS_IAM: []  # Aquí especificas que este endpoint requiere AWS_IAM
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Identificador único del usuario.
                    nombre:
                      type: string
                      description: Nombre del usuario.
                    correo:
                      type: string
                      format: email
                      description: Correo electrónico del usuario.
                    fecha_registro:
                      type: string
                      format: date-time
                      description: Fecha de registro del usuario.
                    num_torneos_creados:
                      type: integer
                      description: Número de torneos creados por el usuario.
                    flag:
                      type: boolean
                      description: Indicador booleano asociado al usuario.
        '403':
          description: Acceso denegado. Solo los administradores pueden acceder a la lista de usuarios.
        '500':
          description: Error interno del servidor.
