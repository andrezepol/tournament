openapi: 3.0.1
info:
  title: tournamentManager
  description: API para la gestión de torneos.
  version: 1.0.0
paths:
  /tournamentManager/createTournament:
    post:
      summary: Crea un nuevo torneo.
      operationId: createTournament
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - nombre
                - descripcion
                - fecha_inicio
                - fecha_fin
                - organizador_id
                - videojuegos_id
              properties:
                id:
                  type: integer
                  description: Identificador único del torneo.
                nombre:
                  type: string
                  description: Nombre del torneo.
                descripcion:
                  type: string
                  description: Descripción del torneo.
                fecha_inicio:
                  type: string
                  format: date-time
                  description: Fecha y hora de inicio del torneo.
                fecha_fin:
                  type: string
                  format: date-time
                  description: Fecha y hora de finalización del torneo.
                organizador_id:
                  type: integer
                  description: Identificador del organizador del torneo.
                videojuegos_id:
                  type: integer
                  description: Identificador del videojuego asociado al torneo.
      responses:
        '201':
          description: Torneo creado exitosamente.
        '400':
          description: Solicitud incorrecta. Datos faltantes o incorrectos.
        '500':
          description: Error interno del servidor.

  /tournamentManager/donations:
    post:
      summary: Realiza una donación a un torneo.
      operationId: donations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - usuario_id
                - torneo_id
                - cantidad
              properties:
                usuario_id:
                  type: integer
                  description: Identificador del usuario que realiza la donación.
                torneo_id:
                  type: integer
                  description: Identificador del torneo al que se realiza la donación.
                cantidad:
                  type: number
                  format: float
                  description: Cantidad de dinero donada.
      responses:
        '201':
          description: Donación registrada exitosamente.
        '400':
          description: Solicitud incorrecta. Datos faltantes o incorrectos.
        '500':
          description: Error interno del servidor.

  /tournamentManager/buyTicket:
    post:
      summary: Compra un ticket para un torneo.
      operationId: buyTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - usuario_id
                - torneo_id
                - cantidad_entradas
                - precio_total
                - fecha_compra
                - usadas
              properties:
                usuario_id:
                  type: integer
                  description: Identificador del usuario que compra el ticket.
                torneo_id:
                  type: integer
                  description: Identificador del torneo para el cual se compra el ticket.
                cantidad_entradas:
                  type: integer
                  description: Cantidad de entradas a comprar.
                precio_total:
                  type: number
                  format: float
                  description: Precio total de la compra.
                fecha_compra:
                  type: string
                  format: date-time
                  description: Fecha y hora de la compra del ticket.
                usadas:
                  type: boolean
                  description: Indica si las entradas han sido usadas.
      responses:
        '201':
          description: Ticket comprado exitosamente.
        '400':
          description: Solicitud incorrecta. Datos faltantes o incorrectos.
        '500':
          description: Error interno del servidor.
